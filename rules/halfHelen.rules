service cloud.firestore {
    match/databases/{database}/documents {

        match /users/{user} {
            //half helen admins and school admins can get and query users
            allow get, list, create: if hasRole("halfHelenAdmin") || isSchoolAdminForThisSchool();
            //half helen admins, school admins and own uses can modify user data
            allow update, delete: if hasRole("halfHelenAdmin") || isSchoolAdminForThisSchool() || request.auth.uid == user;
        }
        
        match /roles/{user} {
            allow get: if request.auth.uid == user || hasRole('halfHelenAdmin') || isSchoolAdminForThisSchool();
            allow list, update, create, delete: if hasRole('halfHelenAdmin') || isSchoolAdminForThisSchool();
        }

        match /district/{district} {
            //todo: add a case for district admin
            allow read, write: if if hasRole("halfHelenAdmin") || isSchoolAdminForThisSchool();;
        }
        
        match /school/{school} {
            allow read, write: if if hasRole("halfHelenAdmin") || isSchoolAdminForThisSchool();;
        }

        match /screening/{screening} {
            //todo: add a case for screener, parent
            allow read, write: if false;
        }

        match /screening_type/{screening_type} {
            //todo: to add a case for screener
            allow read, write: if hasRole("halfHelenAdmin") || isSchoolAdminForThisSchool();;
        }

        match /student/{student} {
            //todo: to add a case for screener, parent
            allow read, write: if hasRole("halfHelenAdmin") || isSchoolAdminForThisSchool();
        }
    }

    //helper functions

    function isSignedIn() {
        return request.auth != null;
    }

    function getRoles() {
        return get(/databases/$(database)/documents/roles/$(request.auth.uid)).data;
    }

    function hasRole(role) {
        return isSignedIn() && getRoles()[role] == true;
    }

    function hasAnyRole(roles) {
        return isSignedIn() && getRoles().keys().hasAny(roles);
    }

    //todo: I think this won't work. The request.auth.schoolId may be wrong, may have to find that data in the db
    function isSchoolAdminForThisSchool() {
        return hasRole("schoolAdmin") && resource.data.schoolId == request.auth.schoolId;
    }

}